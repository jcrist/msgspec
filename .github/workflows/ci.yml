name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
    - main
    paths:
    - "msgspec/**"
    - ".github/workflows/ci.yml"
    - ".pre-commit-config.yaml"
    - "pyproject.toml"
    - "setup.py"
    - "setup.cfg"
  release:
    types:
    - published

jobs:
  lint:
    name: Run static analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.13"

    - name: Build msgspec and install dependencies
      run: |
        pip install -e ".[dev]"
        pip install setuptools setuptools-scm

    - name: Run pre-commit hooks
      uses: pre-commit/action@v3.0.0

    - name: mypy
      run: pytest tests/test_mypy.py

    - name: pyright
      run: pytest tests/test_pyright.py

    - name: doctests
      run: pytest --doctest-modules msgspec

    - name: Rebuild with sanitizers & coverage
      env:
        MSGSPEC_SANITIZE: "true"
        MSGSPEC_COVERAGE: "true"
      run: |
        python setup.py clean --all
        # I know this is deprecated, but I can't find a way to keep the build
        # directory around anymore on new versions of setuptools
        python setup.py develop

    - name: Run tests with sanitizers
      env:
        PYTHONMALLOC: "malloc"
        ASAN_OPTIONS: "detect_leaks=0"
      run: |
        LD_PRELOAD=`gcc -print-file-name=libasan.so` coverage run -m pytest -s -m "not mypy and not pyright"

    - name: Generate coverage files
      run: |
        coverage xml
        gcov -abcu `find build/ -name *.o`

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v5
      with:
        name: coverage-files
        path: |-
          coverage.xml
          _core.c.gcov
          atof.h.gcov
          ryu.h.gcov
        if-no-files-found: error

  upload-coverage:
    name: Upload coverage files to Codecov
    needs:
    - lint
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Download coverage artifacts
      uses: actions/download-artifact@v5
      with:
        pattern: coverage-files
        merge-multiple: true
        path: coverage-files

    - name: Upload Codecov
      uses: codecov/codecov-action@v5
      with:
        use_oidc: true
        directory: coverage-files

  build-sdist:
    name: Build Source Distribution
    runs-on: ubuntu-latest

    outputs:
      artifact-name: "${{ steps.locate-artifact.outputs.file-name }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v7

    - name: Build source distribution
      run: uv build --sdist

    - name: Locate source distribution
      id: locate-artifact
      run: |-
        sdist_name=$(basename dist/*)
        echo "file-name=${sdist_name}" >> $GITHUB_OUTPUT

    - name: Upload artifact
      uses: actions/upload-artifact@v5
      with:
        name: artifact-sdist
        path: dist/${{ steps.locate-artifact.outputs.file-name }}
        if-no-files-found: error

  build-wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.archs }}
    needs:
    - build-sdist
    - lint
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-24.04-arm
          archs: aarch64
        - os: ubuntu-latest
          archs: x86_64
        - os: macos-latest
          archs: arm64
        - os: macos-15-intel
          archs: x86_64
        # - os: windows-11-arm
        #   archs: ARM64
        - os: windows-latest
          archs: AMD64

    env:
      CIBW_SKIP: "${{ github.event_name != 'release' && '*-musllinux_*' || '' }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Download source distribution
      uses: actions/download-artifact@v6
      with:
        name: artifact-sdist
        path: dist

    # TODO: Remove this once the action supports specifying extras, see:
    # https://github.com/pypa/cibuildwheel/pull/2630
    - name: Install uv
      if: runner.os != 'Linux'
      uses: astral-sh/setup-uv@v7

    - name: Build & Test Wheels
      uses: pypa/cibuildwheel@v3.2.1
      with:
        package-dir: dist/${{ needs.build-sdist.outputs.artifact-name }}
      env:
        CIBW_ARCHS: "${{ matrix.archs }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v5
      with:
        name: artifact-wheels-${{ matrix.os }}-${{ matrix.archs }}
        path: wheelhouse/*.whl
        if-no-files-found: error

  upload-pypi:
    name: Upload artifacts to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    needs:
    - build-sdist
    - build-wheels
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
    - uses: actions/download-artifact@v6
      with:
        pattern: artifact-*
        merge-multiple: true
        path: dist

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
