"""This script generates msgspec/atof_consts.h"""
import os


def gen_row(e):
    z = 1 << 2048
    if e >= 0:
        exp = 10 ** e
        z = z * exp
    else:
        exp = 10 ** (-e)
        z = z // exp

    n = -2048

    while z >= (1 << 128):
        z = z >> 1
        n += 1

    h = hex(z)[2:]
    assert len(h) == 32

    approx_n = ((217706 * e) >> 16) + 1087
    biased_n = 1214 + n

    assert approx_n == biased_n

    return "{0x%s, 0x%s},  // 1e%-04d" % (h[16:], h[:16], e)


table_rows = [gen_row(e) for e in range(-307, 289)]

f64_powers = [f"1e{i}" for i in range(23)]

text = """
/* DO NOT EDIT - generated by generate_atof_consts.py */

#ifndef MSGSPEC_ATOF_CONSTS_H
#define MSGSPEC_ATOF_CONSTS_H

static const uint64_t ms_atof_powers_of_10[%d][2] = {
%s
};

static const double ms_atof_f64_powers_of_10[%d] = {
%s
};

#endif
""" % (
    len(table_rows),
    "\n".join(table_rows),
    len(f64_powers),
    ", ".join(f64_powers),
)

repo = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
path = os.path.join(repo, "msgspec", "atof_consts.h")

with open(path, "wb") as f:
    f.write(text.encode("utf-8"))
